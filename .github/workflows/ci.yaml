name: Storefront CI
on:
  pull_request:
    branches: [master, qa2, release]
    paths-ignore:
    - '.github/**'

jobs:
  build:
    name: "STOREFRONT CI"
    runs-on: ubuntu-latest
    env:
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2
      - name: 1- Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: 2- Install dependencies
        run: npm install

      - name: 3- Run typescript checker
        run: npx tsc --noEmit & npx tsc --noEmit -p src/@sdk & npx tsc --noEmit -p src/@next

      - name: 4- Run eslint
        run: npm run eslint

      - name: 5- Run tests
        run: npm run test

      - name: 6- SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: './'
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}

      - name: 7- Build application master ${{ github.event.pull_request.base.ref }} - by ${{ github.actor }}
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'master' }}
        run: npm run build
        env:
          NEXT_PUBLIC_API_URI: ${{ secrets.GRAPHQL_URL_QA }}

      - name: 7- Build application release ${{ github.event.pull_request.base.ref }} - by ${{ github.actor }}
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'release' }}
        run: npm run build
        env:
          NEXT_PUBLIC_API_URI: ${{ secrets.GRAPHQL_URL_PROD }}
