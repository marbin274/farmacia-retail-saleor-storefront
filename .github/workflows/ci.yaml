on:
  pull_request:
    branches: [master, qa2, release]

jobs:
  build:
    name: "STOREFRONT CI "
    runs-on: [self-hosted]
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: 1- Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: 2- Install dependencies
        run: npm install
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: 3- Run typescript checker
        run: npx tsc --noEmit & npx tsc --noEmit -p src/@sdk & npx tsc --noEmit -p src/@next
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: 4- Run tslint
        run: npm run tslint
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: 5- Run tests
        run: npm run test
        env: 
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: 6- Build application master ${{ github.event.pull_request.base.ref }} - by ${{ github.actor }}
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'master' }}
        run: npm run build
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
          API_URI: ${{ secrets.GRAPHQL_URL_QA }}
      - name: 6- Build application release ${{ github.event.pull_request.base.ref }} - by ${{ github.actor }}
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'release' }}
        run: npm run build
        env:
          API_URI: ${{ secrets.GRAPHQL_URL_PROD }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

